/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INT = 4;
  /** RegularExpression Id. */
  int BOOL = 5;
  /** RegularExpression Id. */
  int PTYPE = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int PLUS = 8;
  /** RegularExpression Id. */
  int MINUS = 9;
  /** RegularExpression Id. */
  int TIMES = 10;
  /** RegularExpression Id. */
  int DIV = 11;
  /** RegularExpression Id. */
  int UNDERSCORE = 12;
  /** RegularExpression Id. */
  int COLON = 13;
  /** RegularExpression Id. */
  int COMMA = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int LBRACKET = 17;
  /** RegularExpression Id. */
  int RBRACKET = 18;
  /** RegularExpression Id. */
  int LPAR = 19;
  /** RegularExpression Id. */
  int RPAR = 20;
  /** RegularExpression Id. */
  int OR = 21;
  /** RegularExpression Id. */
  int AND = 22;
  /** RegularExpression Id. */
  int EQ = 23;
  /** RegularExpression Id. */
  int NEQ = 24;
  /** RegularExpression Id. */
  int LEQ = 25;
  /** RegularExpression Id. */
  int GEQ = 26;
  /** RegularExpression Id. */
  int LT = 27;
  /** RegularExpression Id. */
  int GT = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int SEQ = 30;
  /** RegularExpression Id. */
  int VAR = 31;
  /** RegularExpression Id. */
  int VARASS = 32;
  /** RegularExpression Id. */
  int QUOTATIONMARK = 33;
  /** RegularExpression Id. */
  int MOREPART = 34;
  /** RegularExpression Id. */
  int STARTLABEL = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int Num = 37;
  /** RegularExpression Id. */
  int ID = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"int\"",
    "\"bool\"",
    "\"PType\"",
    "\"string\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"_\"",
    "\":\"",
    "\",\"",
    "\"true\"",
    "\"false\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\";\"",
    "\"var\"",
    "\":=\"",
    "<QUOTATIONMARK>",
    "\"|\"",
    "\"starts\"",
    "<DOT>",
    "<Num>",
    "<ID>",
  };

}
